
import { createTranslations } from './studentData';

// Define all translations here
const translations = createTranslations(
  // English translations
  {
    // Core translations
    dashboard: 'Dashboard',
    students: 'Students',
    allStudents: 'All Students',
    internationalStudents: 'International Students',
    nationalStudents: 'National Students',
    noStudents: 'No students added yet',
    addStudent: 'Add Student',
    name: 'Name',
    grade: 'Grade',
    points: 'Points',
    attendance: 'Attendance',
    subjects: 'Subjects',
    nationality: 'Nationality',
    international: 'International',
    national: 'National',
    searchStudents: 'Search students...',
    clearFilters: 'Clear Filters',
    byGrade: 'By Grade',
    noInternationalStudents: 'No international students yet',
    noNationalStudents: 'No national students yet',
    home: 'Home',
    raceToGoal: 'Race to the Goal',
    progressOverview: 'Progress Overview',
    goal: 'Goal',
    totalPoints: 'Total Points',
    progressToGoal: 'Progress to Goal',
    congratulations: 'Congratulations!',
    reachedGoal: 'has reached the goal!',
    almost: 'Almost there!',
    keepGoing: 'Keep going!',
    needsImprovement: 'Needs improvement',
    profile: 'Profile',
    achievements: 'Achievements',
    date: 'Date',
    change: 'Change',
    reason: 'Reason',
    pointsHistory: 'Points History',
    
    // Recognition system translations
    recognition: 'Recognition',
    recognitionSystem: 'Recognition System',
    helpfulness: 'Helpfulness',
    respect: 'Respect',
    teamwork: 'Teamwork',
    excellence: 'Excellence',
    recognitions: 'recognitions',
    studentRecognitions: 'Student Recognitions',
    noRecognitionsYet: 'No recognitions yet',
    nominateStudent: 'Nominate a Student',
    nominateStudentDesc: 'Recognize a student for their positive behavior or achievements',
    selectStudent: 'Select a Student',
    nominationCategory: 'Nomination Category',
    selectCategory: 'Select a Category',
    academicHelp: 'Academic Help',
    emotionalSupport: 'Emotional Support',
    culturalSensitivity: 'Cultural Sensitivity',
    conflictResolution: 'Conflict Resolution',
    groupContribution: 'Group Contribution',
    collaboration: 'Collaboration',
    academicExcellence: 'Academic Excellence',
    specialTalent: 'Special Talent',
    submitNomination: 'Submit Nomination',
    nominationSubmitted: 'Nomination Submitted',
    nominatedFor: 'has been nominated for',
    addRecognition: 'Add Recognition',
    addRecognitionFor: 'Add recognition for {name}',
    enterReason: 'Enter recognition reason...',
    cancel: 'Cancel',
    recognitionAdded: 'Recognition Added',
    receivedRecognitionFor: 'received recognition for',
    
    // Class comparison features
    classComparison: 'Class Comparison',
    classRecognition: 'Class Recognition',
    noClassData: 'No class data available',
    engagement: 'Engagement',
    improvement: 'Improvement',
    
    // Student recognition profile
    recognitionScores: 'Recognition Scores',
    totalRecognitions: 'total recognitions',
    awards: 'Awards',
    recentRecognitions: 'Recent Recognitions',
    
    // Tabs
    studentProgress: 'Student Progress',
  },
  
  // Arabic translations
  {
    // Core translations
    dashboard: 'لوحة القيادة',
    students: 'الطلاب',
    allStudents: 'جميع الطلاب',
    internationalStudents: 'الطلاب الدوليين',
    nationalStudents: 'الطلاب الوطنيين',
    noStudents: 'لم يتم إضافة طلاب بعد',
    addStudent: 'إضافة طالب',
    name: 'الاسم',
    grade: 'الصف',
    points: 'النقاط',
    attendance: 'الحضور',
    subjects: 'المواد',
    nationality: 'الجنسية',
    international: 'دولي',
    national: 'وطني',
    searchStudents: 'البحث عن طلاب...',
    clearFilters: 'مسح الفلاتر',
    byGrade: 'حسب الصف',
    noInternationalStudents: 'لا يوجد طلاب دوليين بعد',
    noNationalStudents: 'لا يوجد طلاب وطنيين بعد',
    home: 'الرئيسية',
    raceToGoal: 'سباق نحو الهدف',
    progressOverview: 'نظرة عامة على التقدم',
    goal: 'الهدف',
    totalPoints: 'إجمالي النقاط',
    progressToGoal: 'التقدم نحو الهدف',
    congratulations: 'تهانينا!',
    reachedGoal: 'وصل إلى الهدف!',
    almost: 'اقتربت!',
    keepGoing: 'استمر!',
    needsImprovement: 'يحتاج إلى تحسين',
    profile: 'الملف الشخصي',
    achievements: 'الإنجازات',
    date: 'التاريخ',
    change: 'التغيير',
    reason: 'السبب',
    pointsHistory: 'سجل النقاط',
    
    // Recognition system translations
    recognition: 'التقدير',
    recognitionSystem: 'نظام التقدير',
    helpfulness: 'المساعدة',
    respect: 'الاحترام',
    teamwork: 'العمل الجماعي',
    excellence: 'التميز',
    recognitions: 'تقديرات',
    studentRecognitions: 'تقديرات الطلاب',
    noRecognitionsYet: 'لا توجد تقديرات بعد',
    nominateStudent: 'ترشيح طالب',
    nominateStudentDesc: 'تقدير طالب على سلوكه الإيجابي أو إنجازاته',
    selectStudent: 'اختر طالب',
    nominationCategory: 'فئة الترشيح',
    selectCategory: 'اختر فئة',
    academicHelp: 'مساعدة أكاديمية',
    emotionalSupport: 'دعم عاطفي',
    culturalSensitivity: 'حساسية ثقافية',
    conflictResolution: 'حل النزاعات',
    groupContribution: 'مساهمة جماعية',
    collaboration: 'تعاون',
    academicExcellence: 'تميز أكاديمي',
    specialTalent: 'موهبة خاصة',
    submitNomination: 'تقديم الترشيح',
    nominationSubmitted: 'تم تقديم الترشيح',
    nominatedFor: 'تم ترشيحه لـ',
    addRecognition: 'إضافة تقدير',
    addRecognitionFor: 'إضافة تقدير لـ {name}',
    enterReason: 'أدخل سبب التقدير...',
    cancel: 'إلغاء',
    recognitionAdded: 'تمت إضافة التقدير',
    receivedRecognitionFor: 'حصل على تقدير لـ',
    
    // Class comparison features
    classComparison: 'مقارنة الصفوف',
    classRecognition: 'تقدير الصفوف',
    noClassData: 'لا توجد بيانات صفية متاحة',
    engagement: 'المشاركة',
    improvement: 'التحسن',
    
    // Student recognition profile
    recognitionScores: 'درجات التقدير',
    totalRecognitions: 'إجمالي التقديرات',
    awards: 'الجوائز',
    recentRecognitions: 'التقديرات الأخيرة',
    
    // Tabs
    studentProgress: 'تقدم الطالب',
  }
);

// Helper function to get translations based on selected language
export const getTranslations = (language: 'en' | 'ar') => {
  return translations[language];
};
